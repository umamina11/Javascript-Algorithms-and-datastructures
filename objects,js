//I
// Build javascript objects
/**Make an object that represents a dog called myDog which contains the properties name (a string), legs, tails and friends.

You can set these object properties to whatever values you want, as long as name is a string, legs and tails are numbers, and friends is an array.
 */

const myDog = {

    name: "Alpha",
  legs: 4,
  tails: 1,
  friends: ["kuttu","dogu"]
  };

  //II
  //Accessing object properties with dot notation 
  /**Read in the property values of testObj using dot notation. Set the variable hatValue equal to the object's property hat and set the variable shirtValue equal to the object's property shirt. */

const testObj = {
    "hat": "ballcap",
    "shirt": "jersey",
    "shoes": "cleats"
  };
  
  const hatValue = testObj.hat;      
  const shirtValue = testObj.shirt;   
  
  //III 
  //Accessing the object properties with the bracket notations
  /**Read the values of the properties an entree and the drink of testObj using bracket notation and assign them to entreeValue and drinkValue respectively.
 */

const testObj1 = {
    "an entree": "hamburger",
    "my side": "veggies",
    "the drink": "water"
  };

  const entreeValue = testObj1["an entree"];   
  const drinkValue = testObj1["the drink"];    


// IV
// accessing object properties with variables

/**Set the playerNumber variable to 16. Then, use the variable to look up the player's name and assign it to player. */


const testObj2 = {
  12: "Namath",
  16: "Montana",
  19: "Unitas"
};

const playerNumber = 16;  
const player = testObj2[playerNumber];  

//V
//updating the object properties

/**Update the myDog object's name property. Let's change her name from Coder to Happy Coder. You can use either dot or bracket notation.
 */

const myDog1 = {
  "name": "Coder",
  "legs": 4,
  "tails": 1,
  "friends": ["freeCodeCamp Campers"]
};

myDog1["name"]="Happy Coder";

//VI
//add new properties to a javascript object 

/**Add a bark property to myDog and set it to a dog sound, such as "woof". You may use either dot or bracket notation.
 */

const myDog2 = {
  "name": "Happy Coder",
  "legs": 4,
  "tails": 1,
  "friends": ["freeCodeCamp Campers"]
};
myDog2.bark="woof";

//VII
//Delete properties from a javascript object
/** Delete the tails property from myDog. You may use either dot or bracket notation.
*/


const myDog3 = {
  "name": "Happy Coder",
  "legs": 4,
  "tails": 1,
  "friends": ["freeCodeCamp Campers"],
  "bark": "woof"
};


delete myDog3.tails;

//VIII
//Using objects for lookups
/**Convert the switch statement into an object called lookup. Use it to look up val and assign the associated string to the result variable. */

function phoneticLookup(val) {
  let result = "";

  var lookup={
    "alpha":"Adams",
    "bravo":"Boston",
    "charlie":"Chicago",
    "delta":"Denver",
    "echo":"Easy",
    "foxtrot":"Frank"
  };
 

    result = lookup[val];

  return result;
}

phoneticLookup("charlie");

//IX
//testing objects for properties

/**Modify the function checkObj to test if an object passed to the function (obj) contains a specific property (checkProp). If the property is found, return that property's value. If not, return "Not Found". */

